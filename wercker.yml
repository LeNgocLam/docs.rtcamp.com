# our build should run within a Ruby box
# box: wercker/ruby
# docker pull marcellodesales/nodejs-ruby
box: marcellodesales/nodejs-ruby
build:
  steps:
    # Run a smart version of bundle install
    # which improves build execution time of
    # future builds
    - bundle-install

    # A custom script step
    # that actually builds the jekyll site
    - script:
        name: generate site
        code: bundle exec jekyll build

    # install gitbook itself
    - script:
        name: install gitbook
        code: npm -g install gitbook-cli

    # build gitbooks: rtbiz/core/dev
    - script:
        name: build rtbiz core dev book
        code: gitbook install rtbiz/core/dev && gitbook build rtbiz/core/dev _site/rtbiz/core/dev

    # build gitbooks: rtbiz/core/user
    - script:
        name: build rtbiz core user book
        code: gitbook install rtbiz/core/user && gitbook build rtbiz/core/user _site/rtbiz/core/user

    # build gitbooks: rtbiz/helpdesk/admin
    - script:
        name: build rtbiz helpdesk admin book
        code: gitbook install rtbiz/helpdesk/admin && gitbook build rtbiz/helpdesk/admin _site/rtbiz/helpdesk/admin

    # build gitbooks: rtbiz/helpdesk/staff
    - script:
        name: build rtbiz helpdesk staff book
        code: gitbook install rtbiz/helpdesk/staff && gitbook build rtbiz/helpdesk/staff _site/rtbiz/helpdesk/staff

    # build gitbooks: rtmedia
    - script:
        name: build rtmedia book
        code: gitbook install rtmedia && gitbook build rtmedia _site/rtmedia




deploy:
  steps:
    - add-to-known_hosts:
        hostname: YOURSERVER.COM
    - mktemp:
        envvar: PRIVATEKEY_PATH
    - create-file:
        name: write key
        filename: $PRIVATEKEY_PATH
        content: $SSH_PRIVATE
        overwrite: true
        hide-from-log: true
    - script:
        name: deploy jekyll docs and gitbooks to amazon ec2
        code: rsync -avz --progress -e "ssh -i $PRIVATEKEY_PATH -l root -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $HOST" _site/* $USER@$HOST:$DEST

    # - install-packages:
    #     packages: sshpass  rsync #needed by cdn77

    # - script:
    #     name: deploy jekyll docs to cdn
    #     code: rsync -avz --progress --rsh="sshpass -p $SSHPASS ssh -l $SSHUSER -o StrictHostKeyChecking=no" _site/* $SSHUSER@$SSHHOST:/www/


    # - script:
    #     name: deploy rtbiz core dev book
    #     code: rsync -avz --progress --rsh="sshpass -p $SSHPASS ssh -l $SSHUSER -o StrictHostKeyChecking=no" rtbiz/core/dev/_book/* $SSHUSER@$SSHHOST:/www/rtbiz/core/dev/
    #
    # - script:
    #     name: deploy rtbiz core user book
    #     code: rsync -avz --progress --rsh="sshpass -p $SSHPASS ssh -l $SSHUSER -o StrictHostKeyChecking=no" rtbiz/core/user/_book/* $SSHUSER@$SSHHOST:/www/rtbiz/core/user/
    #
    # - script:
    #     name: deploy rtbiz helpdesk admin book
    #     code: rsync -avz --progress --rsh="sshpass -p $SSHPASS ssh -l $SSHUSER -o StrictHostKeyChecking=no" rtbiz/helpdesk/admin/_book/* $SSHUSER@$SSHHOST:/www/rtbiz/helpdesk/admin/
    #
    # - script:
    #     name: deploy rtbiz helpdesk staff book
    #     code: rsync -avz --progress --rsh="sshpass -p $SSHPASS ssh -l $SSHUSER -o StrictHostKeyChecking=no" rtbiz/helpdesk/staff/_book/* $SSHUSER@$SSHHOST:/www/rtbiz/helpdesk/staff/

  # after-steps:
  #   - script:
  #       name: purge cdn
  #       code: curl --data "cdn_id=$CDNID&login=$APIUSER&passwd=$APIPASS" https://client.cdn77.com/api/v2.0/data/purge-all

    - sherzberg/slack-notify:
        subdomain: rtcamp
        token: $SLACKTOKEN
        channel: "#docs"
        username: wercker
        icon_url: https://avatars3.githubusercontent.com/u/1695193?s=140
